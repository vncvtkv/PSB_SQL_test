-- Первая задача

-- Создание таблицы Table
create table if not exists "Table" (
id SERIAL primary key,
client_id INT,
amount NUMERIC(10, 2),
"date" date
);

-- Заполнение данными Table
truncate table "Table";
INSERT INTO "Table" (client_id, amount, "date") VALUES 
(1, 75.50, '2023-03-15'),
(1, 120.00, '2023-04-22'),
(1, 45.75, '2023-05-10'),
(1, 98.20, '2023-06-01'),
(1, 60.00, '2023-07-18'),
(1, 155.00, '2023-08-05'),

(2, 30.00, '2023-01-28'),
(2, 85.25, '2023-02-14'),
(2, 110.50, '2023-03-05'),
(2, 55.75, '2023-04-12'),
(2, 90.00, '2023-05-20'),
(2, 130.00, '2023-06-08'),
(2, 130.00, '2023-06-08'),

(3, 15.50, '2023-02-03'),
(3, 65.00, '2023-03-11'),
(3, 140.25, '2023-04-02'),
(3, 70.75, '2023-05-09'),
(3, 105.00, '2023-01-17'),
(3, 145.00, '2023-01-05'),
(3, 105.00, '2023-01-17'),
(3, 145.00, '2023-01-05'),

(4, 20.00, '2023-01-20'),
(4, 70.25, '2023-04-07'),
(4, 120.50, '2023-05-01'),
(4, 75.75, '2023-06-08'),
(4, 110.00, '2023-07-16'),
(4, 150.00, '2023-01-03'),
(4, 75.75, '2023-06-08'),
(4, 110.00, '2023-07-16'),
(4, 150.00, '2023-01-03'),

(5, 25.50, '2023-01-25'),
(5, 75.00, '2023-01-13');


-- Необходимо написать запросы, которые покажут:
-- Первый пункт
/*
количество клиентов магазина.
*/
select COUNT(distinct client_id) as cnt_client
from "Table";

-- Второй пункт
/*
за январь 2023 года для каждого клиента сумму всех его покупок, среднюю сумму
покупки, максимальный размер покупки (самую дорогую),
*/

select client_id,
	   SUM(amount) as total_amout,
	   AVG(amount) as avg_amout,
	   MAX(amount) as max_amout
from "Table"
where "date" between '2023-01-01' and '2023-01-31'
group by client_id

union 

select client_id,
	   0 as total_amout,
	   0 as avg_amout,
	   0 as max_amout
from "Table" t1
where not exists (select 1
from "Table" t2 
where "date" between '2023-01-01' and '2023-01-31'
             and t1.client_id = t2.client_id
);

;

-- Третий пункт
/*
клиентов, которые совершили больше 2 покупок и количество совершенных покупок.
Результат необходимо отразить по убыванию количества совершенных покупок.
*/

select client_id,
       COUNT(*) as cnt
from "Table"
group by client_id
having COUNT(*) > 2
order by 2 DESC