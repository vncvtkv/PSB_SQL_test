-- Первая задача

-- Создание таблицы Table
CREATE TABLE IF NOT EXISTS "Table" (
  CLIENT_ID INT,
  AMOUNT NUMERIC(10, 2),
  "DATE" DATE
);

-- Заполнение данными Table
TRUNCATE TABLE "Table";
INSERT INTO "Table" (CLIENT_ID, AMOUNT, "DATE") VALUES 
(1, 75.50, '2023-03-15'),  --Нет покупок в январе 2023
(1, 120.00, '2023-04-22'),
(1, 45.75, '2023-05-10'),
(1, 98.20, '2023-06-01'),
(1, 60.00, '2023-07-18'),
(1, 155.00, '2023-08-05'),

(2, 30.00, '2023-01-28'),
(2, 85.25, '2023-02-14'),
(2, 110.50, '2023-03-05'),
(2, 55.75, '2023-04-12'),
(2, 90.00, '2023-05-20'),
(2, 130.00, '2023-06-08'),
(2, 130.00, '2023-06-08'),

(3, 15.50, '2023-02-03'),
(3, 65.00, '2023-03-11'),
(3, 140.25, '2023-04-02'),
(3, 70.75, '2023-05-09'),
(3, 105.00, '2023-01-17'),
(3, 145.00, '2023-01-05'),
(3, 105.00, '2023-01-17'),
(3, 145.00, '2023-01-05'),

(4, 20.00, '2023-01-20'),
(4, 70.25, '2023-04-07'),
(4, 120.50, '2023-05-01'),
(4, 75.75, '2023-06-08'),
(4, 110.00, '2023-07-16'),
(4, 150.00, '2023-01-03'),
(4, 75.75, '2023-06-08'),
(4, 110.00, '2023-07-16'),
(4, 150.00, '2023-01-03'),

(5, 25.50, '2023-01-25'),
(5, 75.00, '2023-01-13'),

(6, 1, '2022-01-25'),
(6, 1, '2023-01-25'),
(6, 2, '2023-01-13'),
(6, 3, '2023-01-25');


-- Необходимо написать запросы, которые покажут:
/*
1. Количество клиентов магазина;
*/
SELECT COUNT(DISTINCT client_id) AS cnt_client
FROM "Table";


/*
2. За январь 2023 года для каждого клиента сумму всех его покупок, среднюю сумму
покупки, максимальный размер покупки (самую дорогую);
*/

SELECT
	client_id,
	SUM(CASE WHEN "DATE" BETWEEN '2023-01-01' AND '2023-01-31' THEN amount
           ELSE 0 END) AS total_amount,
	CASE
		WHEN COUNT(CASE WHEN "DATE" BETWEEN '2023-01-01' AND '2023-01-31' THEN 1 END) = 0 THEN 0
		ELSE SUM(CASE WHEN "DATE" BETWEEN '2023-01-01' AND '2023-01-31' THEN amount END) 
             / COUNT(CASE WHEN "DATE" BETWEEN '2023-01-01' AND '2023-01-31' THEN 1 END)
	END AS avg_amount,
	MAX(CASE WHEN "DATE" BETWEEN '2023-01-01' AND '2023-01-31' THEN amount
           ELSE 0 END) AS max_amount
FROM
	"Table"
GROUP BY
	client_id
ORDER BY client_id;

/*
3. Клиентов, которые совершили больше 2 покупок и количество совершенных покупок.
Результат необходимо отразить по убыванию количества совершенных покупок.
*/

SELECT client_id,
       COUNT(*) AS cnt
FROM "Table"
GROUP by client_id
HAVING COUNT(*) > 2
ORDER BY cnt DESC;